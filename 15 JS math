/* TASK 1
Коэффициенты квадратного уравнения. Найти коэффициенты a, b, c квадратного уравнения, которое имеет два заданных корня x₁ и x₂.
Квадратное уравнение имеет вид ax(в квадрате)+bx+c=0  Поскольку решений бесконечно много, то будем рассматривать случай a = 1.
Помните, что корни уравнения можно записать как (x−x1)(x−x2)=0 
Входные данные: Целые числа x₁ и x₂. Выходные данные: Числа a, b, c в одной строчке.
Sample Input 1:
1
2
Sample Output 1:
1 -3 2
*/


let [x1,x2] = [...Array(2)].map(prompt).map(Number)
let b = (x1 + x2) * -1
let c = x1 * x2
console.log(`1 ${b} ${c}`)




/* TASK 2
Сесть по-другому
Чтобы разыграть Помону Стебль на травологии Гарри, Гермиона и Рон решили каждый по-новому рассаживаться в классе. 
Каждый из них может занимать многократно любое из мест, но уникальной должна быть рассадка всей тройки.
Сколько существует вариантов рассадки, если всего мест N, но место профессора занимать нельзя.
Входные данные: Число сидячих мест, включая профессорское кресло. Выходные данные: Число возможных вариантов рассадки.
Sample Input: 8 Sample Output: 210
*/


function factorial(n) {
    for(let i = n-1; i > 0; i--) {
        n *= i
    }
    return n
}
let n = Number(prompt())
let x = factorial(n-1) / factorial(n-4)
console.log(Math.round(x))




/* TASK 3
Написать функцию perimeter, которая по координатам вершин x1, y1, x2, y2, x3, y3 определит периметр треугольника.
Как часть решения нужно написать функцию distance, которая по координатам вершин x1, y1, x2, y2 вернет длину отрезка между этими координатами.
Sample Input:
8 11
2 5
7 7
Sample Output: 17.99
*/


function distance(x1, y1, x2, y2) {
    return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
}
function perimeter(x1, y1, x2, y2, x3, y3) {
    let a = distance(x1, y1, x2, y2)
    let b = distance(x3, y3, x2, y2)
    let c = distance(x1, y1, x3, y3)
    return (a+b+c)
}




/* TASK 4
Катер, двигающийся в неподвижной воде со скоростью x км/ч, проходит по течению реки и после стоянки, которая длится ts ч, возвращается в исходный пункт.
Скорость течения реки равна y км/ч, а в исходный пункт катер прибывает через T ч после отплытия из него. Сколько километров прошел катер за весь рейс?
Входные данные: Положительные натуральные числа x,ts,y,T на одной строке. Выходные данные: Количество километров.
Sample Input: 27 15 1 42 Sample Output: 728
*/


let [x, ts, y, T] = prompt().split(' ').map(Number)
console.log( ((x-y) * (x+y) * (T-ts)) / x)


/* TASK 5
Объём кусочка льда
Волшебник показал трюк, положив прямоугольный кусок льда в бутылку, который шире горлышка бутылки. Основанием кусочка льда является квадрат, касающийся стенок бутылки. 
Ради развлечения вы решили посчитать объем кирпичика. Даны radius -- радиус бутылки; bottleLength -- общая длина бутылки; rimLength-- длина от горлышка бутылки до кирпича.
Верните объем кирпича, который магу удалось поместить в бутылку. Примечание: Все входные данные целые. Бутылка имеет форму цилиндра.
Sample Input 1: 1 10 2 Sample Output 1: 16 Sample Input 2: 5 30 7 Sample Output 2: 1150
*/


let [radius, bottleLength, rimLength] = prompt().split(' ').map(Number)
let a = Math.sqrt((2 * radius) ** 2 / 2)//    Длина стороны вписанного квадрата через радиус круга
let b = bottleLength - rimLength    // высота куба
console.log(Math.round(a*a*b))




/* TASK 6
Высота. Конец тени от стелы находится в точке A. Расстояние от A до края постамента -- x метров, в точке A угол между землей и верхушкой стелы -- a ﻿градусов.
Определите высоту памятника. Sample Input:
10
60
Sample Output: 17.3205
*/


let x = Number(prompt())
let a = Number(prompt())
let H = x * Math.tan((Math.PI/180) * a)
console.log(H.toFixed(4))




/* TASK 7
Сумма корней. Дано число n и уравнение sqrt(a)+sqrt(b)=sqrt(n). Сколько целочисленных пар (a, b) являются решениями этого уравнения?
Например, при n = 16, решениями уравнения будут 5 пар: (0,16) (1,9) (4,4) (9,1) (16,0)
​

function countt(n) {
    let count = 0
    let sqrtN = Math.sqrt(n)
    let error = 0.0000001
    
    for (let b = 0; b <= n; b++) {
        let sqrtB = sqrtN * Math.sqrt(b)
        if (Math.abs(sqrtB - Math.round(sqrtB)) < error ) {
            let a = n + b - 2 * Math.round(sqrtB)
            if (Math.abs(a - Math.round(a)) < error && a >= 0) {
                count ++
            }
        }
    }
    return count
}

let n = Number(prompt())
console.log(countt(n))
