/* TASK 1 
–ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É  –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ n –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏ –≤–µ—Ä–Ω–∏—Ç–µ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
Sample Input 1: 8 Sample Output 1: 36 
*/


function testCycle(n) {
    let x = 0
    while(n) x += n, n--
    return x
}
let n = Number(prompt())
console.log(testCycle(n))




/* TASK 2
–î–∞–Ω—ã –¥–≤–∞ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞ k –∏ n. –í–µ—Ä–Ω–∏—Ç–µ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç—Ä–æ–∫—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —á–∏—Å–µ–ª n, –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è k —Ä–∞–∑, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º. –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –∏ k –∏ n –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–æ 1.
Sample Input 1: 9 5 Sample Output 1: 5 5 5 5 5 5 5 5 5
*/


let [k, n] = prompt().split(' ').map(Number)
function testCycle(k, n) {
  let x = n + ' ';
  for(k; k > 1; k--) {
      x += n + ' '
  }
  return x;
}
console.log(testCycle(k, n))




/* TASK 3
–î–∞–Ω—ã —á–∏—Å–ª–∞ a –∏ b. –í—ã–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–∞–º–∏ –æ—Ç –∞ –¥–æ b, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏. –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ b –±–æ–ª—å—à–µ a.
Sample Input 2: 9 16 Sample Output 2: 9 10 11 12 13 14 15 16
*/


function testCycle(a, b) {
  let x = '';
  while(b >= a) {
      x += a + ' '
      a++
  }
  return x;
}
let [a, b] = prompt().split(' ').map(Number)
console.log(testCycle(a, b))




/* TASK 4
–î–∞–Ω—ã —á–∏—Å–ª–∞ a –∏ b. –í—ã–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–∞–º–∏ –º–µ–∂–¥—É –∞ –∏ b –≤–∫–ª—é—á–∞—è –≥—Ä–∞–Ω–∏—Ü—ã, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é. –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –∫–∞–∫–æ–µ –∏–∑ —á–∏—Å–µ–ª –±–æ–ª—å—à–µ, –Ω–æ –∏–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –∏ a –∏ b –±–æ–ª—å—à–µ 0.
Sample Input 1: 8 1 Sample Output 1: 1 2 3 4 5 6 7 8
*/


function testCycle(a, b) {
    let x = '';
    if (a > b) [a, b] = [b, a];
    while (a <= b) {
        x += a + ' '
        a++
    }
    return x;
}
let [a, b] = prompt().split(' ').map(Number)
console.log(testCycle(a, b))




/* TASK 5
–î–∞–Ω—ã —á–∏—Å–ª–∞ a –∏ b. –í—ã–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É —Å —á–∏—Å–ª–∞–º–∏ –æ—Ç –±–æ–ª—å—à–µ–≥–æ —á–∏—Å–ª–∞ –¥–æ –º–µ–Ω—å—à–µ–≥–æ. –ò–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ –∏ a –∏ b –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–æ 1, –Ω–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –∫–∞–∫–æ–µ –∏–∑ –Ω–∏—Ö –±–æ–ª—å—à–µ.
Sample Input 2: 11 14 Sample Output 2: 14 13 12 11
*/


function testCycle(a, b) {
    let x = '';
    if (a < b) [a, b] = [b, a]
    while ( a >= b) {
        x += a + ' '
        a--
    }
    return x;
}
let [a, b] = prompt().split(' ').map(Number)
console.log(testCycle(a, b))




/* TASK 6
–î–∞–Ω—ã —á–∏—Å–ª–∞ a –∏ b. –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ —á–∏—Å–µ–ª –º–µ–∂–¥—É a –∏ b –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ. –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ, –∫–∞–∫–æ–µ –∏–∑ —á–∏—Å–µ–ª a –∏–ª–∏ b –±–æ–ª—å—à–µ.
Sample Input 1: 9 4 Sample Output 1: 271
*/


function testCycle(a, b) {
    let x = 0;
    if (a > b) [a, b] = [b, a]
    for(; a <= b; a++) {
        x += (a * a)
    }
  return x;
}
let [a, b] = prompt().split(' ').map(Number)
console.log(testCycle(a, b))




/* TASK 7
–î–∞–Ω–æ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ n, –±–æ–ª—å—à–µ–µ 1. –ù–∞–π—Ç–∏ –∫–≤–∞–¥—Ä–∞—Ç –¥–∞–Ω–Ω–æ–≥–æ —á–∏—Å–ª–∞, –∏—Å–ø–æ–ª—å–∑—É—è —Ñ–æ—Ä–º—É–ª—É ùëõ^2=1+3+5+...+(2‚àóùëõ‚àí1). 
–ò–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≤–µ—Å—Ç–∏ —Å—Ç—Ä–æ–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ —á–∏—Å–µ–ª, –ø–æ–ª—É—á–∞—é—â–∏—Ö—Å—è –Ω–∞ –∫–∞–∂–¥–æ–º —à–∞–≥–µ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ —Å–ª–∞–≥–∞–µ–º–æ–≥–æ (—Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø–æ–ª—É—á–∏—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ 
–∏–∑ –∫–≤–∞–¥—Ä–∞—Ç–æ–≤ –≤—Å–µ—Ö —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ n).
Sample Input 1: 8 Sample Output 1: 1 4 9 16 25 36 49 64
*/


function testCycle(n) {
    let t = 0
    let x = ''
    for(let i = 1; i <= (2 * n - 1); i += 2) {
        t += i
        x += t + ' '
    }
  return x;
}
let n = Number(prompt())
console.log(testCycle(n))




/* TASK 8
–î–∞–Ω–æ —á–∏—Å–ª–æ n (n > 0). –í–µ—Ä–Ω–∏—Ç–µ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–ª–µ–¥—É—é—â—É—é —Å—É–º–º—É: 1+1.5+2+2.5+...+ùëõ. –ó–∞–¥–∞—á–∞ –¥–æ–≤–æ–ª—å–Ω–æ –ø—Ä–æ—Å—Ç–∞—è, –ø–æ–¥—É–º–∞–π—Ç–µ, –∫–∞–∫ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞, 
—á—Ç–æ–±—ã –ª–µ–≥–∫–æ –ø–æ–ª—É—á–∏—Ç—å –Ω—É–∂–Ω—É—é —Å—É–º–º—É.  
Sample Input 1: 9 Sample Output 1: 85
*/


function testCycle(n) {
    let x = 0
    while(n >= 1) {
        x += n
        n -= 0.5
    }
    return x
}
let n = Number(prompt())
console.log(testCycle(n))




/* TASK 9
–î–∞–Ω–æ —á–∏—Å–ª–æ n (n > 0). –í–µ—Ä–Ω–∏—Ç–µ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–≤–æ–π–Ω–æ–≥–æ —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–∞: ùëõ!!=ùëõ‚àó(ùëõ‚àí2)‚àó(ùëõ‚àí4)‚àó...‚àó2 (–∏–ª–∏ 1, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —á–µ—Ç–Ω–æ—Å—Ç–∏ n).
–ü—Ä–∏–º–µ—Ä, –¥–ª—è n = 5: ùëõ!!=5‚àó3‚àó1=15, –¥–ª—è n = 6: ùëõ!!=6‚àó4‚àó2=48
Sample Input 2: 7 Sample Output 2: 105
*/


function testCycle(n) {
    var x = 1
    while(n>=1) x*=n, n-=2
    return x
}
let n = Number(prompt())
console.log(testCycle(n))




/* TASK 10
–ù–∞–π–¥–∏—Ç–µ –Ω–∞–∏–±–æ–ª—å—à–∏–π –æ–±—â–∏–π –¥–µ–ª–∏—Ç–µ–ª—å —á–∏—Å–µ–ª a –∏ b. (–ü–æ–¥—Å–∫–∞–∑–∫–∞: –≤–∞–º –ø–æ–º–æ–∂–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º –ï–≤–∫–ª–∏–¥–∞ –∏ —Ü–∏–∫–ª while).
Sample Input 1: 24 182 Sample Output 1: 2
*/


function testCycle(a, b) {
    let x; 
    while(a) {
        if (a < b) [a, b] = [b, a]
        a = a % b
    }
  return b;
}
let [a, b] = prompt().split(' ').map(Number)
console.log(testCycle(a, b))




/* TASK 11
–î–∞–Ω–æ —á–∏—Å–ª–æ n (n > 1). –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø—Ä–æ—Å—Ç–æ–µ –æ–Ω–æ –∏–ª–∏ —Å–æ—Å—Ç–∞–≤–Ω–æ–µ. –ï—Å–ª–∏ —á–∏—Å–ª–æ –ø—Ä–æ—Å—Ç–æ–µ - –≤–µ—Ä–Ω–∏—Ç–µ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ —Å—Ç—Ä–æ–∫—É "–ü—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ", –µ—Å–ª–∏ –Ω–µ—Ç - "–°–æ—Å—Ç–∞–≤–Ω–æ–µ —á–∏—Å–ª–æ". 
*/


function testCycle(n) {
    let x = 2
    let z = 0
    while (x*x <= n && z != 1) {
        if (n % x === 0) z = 1
        x+=1
    }
  return z === 0 ? '–ü—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ' : '–°–æ—Å—Ç–∞–≤–Ω–æ–µ —á–∏—Å–ª–æ'
}
let n = Number(prompt())
console.log(testCycle(n))




/* TASK 12
–î–∞–Ω–æ —á–∏—Å–ª–æ n (n > 1). –í—ã–≤–µ–¥–∏—Ç–µ —Å—Ç—Ä–æ–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ –ø—Ä–æ—Å—Ç—ã—Ö —á–∏—Å–µ–ª, –º–µ–Ω—å—à–∏—Ö n. –í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å —Ä–µ—à–µ—Ç–æ–º –≠—Ä–∞—Ç–æ—Å—Ñ–µ–Ω–∞. –ï–¥–∏–Ω–∏—Ü—É –Ω–µ —Å—á–∏—Ç–∞–µ–º –ø—Ä–æ—Å—Ç—ã–º —á–∏—Å–ª–æ–º.
Sample Input 1: 27 Sample Output 1: 2 3 5 7 11 13 17 19 23
*/


function testCycle(n) {
    let b = []
    let a = []
    for(let i = 2; i < n; i++) {
        if (!b[i]){
            a.push(i)
            for(let j = i * i; j < n; j += i) {
                b[j] = true
            }
        }
    }
    return a.join(' ')
}
let n = Number(prompt())
console.log(testCycle(n))




/* TASK 13
–î–∞–Ω–æ —á–∏—Å–ª–æ n. –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É –µ–≥–æ —Ü–∏—Ñ—Ä. Sample Input 1: 2260 Sample Output 1: 10
*/


function testCycle(n) {
    let x
    let sum = 0
    while(n){
        sum += n % 10
        n = Math.trunc(n / 10)
    }
    return sum;
}
let n = Number(prompt())
console.log(testCycle(n))




/* TASK 14
–î–∞–Ω–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ n. –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ –µ–≥–æ –≤ –¥–≤–æ–∏—á–Ω—É—é —Å–∏—Å—Ç–µ–º—É —Å—á–∏—Å–ª–µ–Ω–∏—è.
–ú–µ—Ç–æ–¥ Number.prototype.toString –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.
*/


function testCycle(n) {
    let sum = ''
    while(n){
        sum = n % 2 + sum
        n = Math.floor(n / 2)
    }
    return sum;
}
let n = Number(prompt())
console.log(testCycle(n))




/* TASK 15
–î–∞–Ω–æ —á–∏—Å–ª–æ n (n > 1). –í–µ—Ä–Ω–∏—Ç–µ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ n-–Ω–æ–µ —á–∏—Å–ª–æ –§–∏–±–æ–Ω–∞—á—á–∏
Sample Input 1: 4 Sample Output 1: 3
*/


function testCycle(n) {
    let x = 0
    let a = 0
    let b = 1
    n === 0 ? x = 0 : x = 1
    if (n > 1) {
        for(let i = 2; i <= n; i++){
            x = a + b
            a = b
            b = x
        }
    }
    return x;
}
let n = Number(prompt())
console.log(testCycle(n))
